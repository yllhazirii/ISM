name: Build, Push & Deploy Backend to ACR + ACI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Azure Login using Service Principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3️⃣ Docker Login to ACR
      - name: Docker Login to ACR
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      # 4️⃣ Set backend image tags
      - name: Set image tags
        id: vars
        run: |
          COMMIT_SHA=$(git rev-parse --short HEAD)
          echo "BACKEND_IMAGE=${{ secrets.ACR_NAME }}.azurecr.io/backend:$COMMIT_SHA" >> $GITHUB_ENV
          echo "BACKEND_IMAGE_LATEST=${{ secrets.ACR_NAME }}.azurecr.io/backend:latest" >> $GITHUB_ENV

#      # 5️⃣ Build & Push Backend Image
#      - name: Build & Push Backend Image
#        run: |
#          docker build -t $BACKEND_IMAGE -t $BACKEND_IMAGE_LATEST ./backend
#          docker push $BACKEND_IMAGE
#          docker push $BACKEND_IMAGE_LATEST

      # 6️⃣ Deploy or Update Backend in ACI
      - name: Deploy or Update Backend in ACI
        env:
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
        run: |
          STATIC_DNS_LABEL=backend
          CONTAINER_NAME=backend-container

          if az container show \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --name "$CONTAINER_NAME" &> /dev/null; then
            echo "Container exists, updating image..."
            az container update \
              --resource-group "$AZURE_RESOURCE_GROUP" \
              --name "$CONTAINER_NAME" \
              --image "$BACKEND_IMAGE_LATEST"
          else
            echo "Container does not exist, creating..."
            az container create \
              --resource-group "$AZURE_RESOURCE_GROUP" \
              --name "$CONTAINER_NAME" \
              --image "$BACKEND_IMAGE_LATEST" \
              --cpu 1 --memory 1 \
              --dns-name-label "$STATIC_DNS_LABEL" \
              --ports 80 443 \
              --restart-policy Always
          fi

